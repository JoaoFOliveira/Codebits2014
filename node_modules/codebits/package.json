{
  "name": "codebits",
  "version": "0.2.1",
  "description": "codebits.eu API module wrapper",
  "main": "index.js",
  "scripts": {
    "test": "tap tests/*.test.js"
  },
  "author": {
    "name": "David Dias",
    "email": "daviddias.p@gmail.com",
    "url": "http://daviddias.me"
  },
  "contributors": [
    {
      "name": "Alexandre Campos",
      "email": "alexandrefilipecampos@gmail.com"
    }
  ],
  "license": "MIT",
  "dependencies": {
    "request": "^2.34.0",
    "tap": "^0.4.8"
  },
  "keywords": [
    "codebits",
    "lisbon"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:diasdavid/codebits.git"
  },
  "homepage": "https://github.com/diasdavid/codebits",
  "devDependencies": {
    "precommit-hook": "^0.3.10"
  },
  "readme": "Codebits API Node.js Module Wrapper\n=========\n\n[![Gitter chat](https://badges.gitter.im/diasdavid/codebits.png)](https://gitter.im/diasdavid/codebits) \n[![Dependency Status](https://david-dm.org/diasdavid/codebits.svg?theme=shields.io)](https://david-dm.org/diasdavid/codebits)\n\n![Node-Codebits](https://github.com/diasdavid/codebits/raw/master/logo/node-codebits-small.png)\n\nThis is the Codebits API (https://codebits.eu/s/api) Node.js Module Wrapper to speed up for development during that 72 hour straight hackathon we know and love!\n\n# Installation\n1. `$ npm install codebits`\n\n# Usage\n```javascript\nvar codebits = require('codebits');\ncodebits.auth.logIn('USERNAME', 'PASSWORD', function (err, token){\n  // codebits module will cache the token\n  codebits.users.getUserbyID('USERID', function(err, user){\n    console.log(user);\n  });\n \n});\n// but if you want to use another auth token, you can\ncodebits.users.getUserbyID('USERID', anotherToken, function(err, user){\n  console.log(user);\n});\n```\n\n# Disclaimer\n\nThis module was built in a very quick 'hacky' manner, it has tests, which is a good thing, but it is not bullet proof, if you find any bug or a better way to do things, we accept happily pull requests. Big thanks to [axfcampos](https://github.com/axfcampos) who liked the idea and offered his time to implement several of the functionalities.\n\n# Table of Contents\n\n* [Auth](https://github.com/diasdavid/codebits#auth)\n  * [logIn](https://github.com/diasdavid/codebits#login)\n* [Badges](https://github.com/diasdavid/codebits#badges)\n  * [listBadges](https://github.com/diasdavid/codebits#listbadges)\n  * [getBadgeUsers](https://github.com/diasdavid/codebits#getbadgeusers)\n  * [redeemBadges `requires auth token`](https://github.com/diasdavid/codebits#redeembadges)\n* [Bots](https://github.com/diasdavid/codebits#bots)\n  * [getBotParts](https://github.com/diasdavid/codebits#getBotsParts)\n  * [getUserBot](https://github.com/diasdavid/codebits#getUserBot)\n  * [makeBot](https://github.com/diasdavid/codebits#makeBot)\n  * [setBot `requires auth token`](https://github.com/diasdavid/codebits#setBot)\n* [Calendar](https://github.com/diasdavid/codebits#calendar)\n* [Call for Talks](https://github.com/diasdavid/codebits#call-for-talks)\n  * [listSubmissions `optional auth token`](https://github.com/diasdavid/codebits#listSubmissions)\n  * [voteTalkUp `requires auth token`](https://github.com/diasdavid/codebits#voteTalkUp)\n  * [voteTalkDown `requires auth token`](https://github.com/diasdavid/codebits#voteTalkDown)\n* [Comments `requires auth token`](https://github.com/diasdavid/codebits#comments)\n* [Projects](https://github.com/diasdavid/codebits#projects)\n  * [listProject `requires auth token`](https://github.com/diasdavid/codebits#listProjects)\n  * [getProjectInfo `requires auth token`](https://github.com/diasdavid/codebits#getProjectInfo)\n  * [getCurrentVotes `requires auth token`](https://github.com/diasdavid/codebits#getCurrentVotes)\n  * [voteCurrentProject `requires auth token`](https://github.com/diasdavid/codebits#voteCurrentProject)\n* [Search `requires auth token`](https://github.com/diasdavid/codebits#search)\n* [Users](https://github.com/diasdavid/codebits#users)\n  * [getUserbyID `requires auth token`](https://github.com/diasdavid/codebits#getUserbyID)\n  * [getUserbyNick `requires auth token`](https://github.com/diasdavid/codebits#getUserbyNick)\n  * [addUserAsFriend `requires auth token`](https://github.com/diasdavid/codebits#addUserAsFriend)\n  * [rejectUserAsFriend `requires auth token`](https://github.com/diasdavid/codebits#rejectUserAsFriend)\n  * [listAcceptedUsers `requires auth token`](https://github.com/diasdavid/codebits#listAcceptedUsers)\n  * [userFavSessions `requires auth token`](https://github.com/diasdavid/codebits#userFavSessions)\n* [Other Notes](https://github.com/diasdavid/codebits#other-notes)\n\n\n# Auth\n### logIn\n\nCreates a session token that is requested by calls that need auth\n\n**call:**\n```javascript\ncodebits.auth.logIn('USERNAME', 'PASSWORD', function (err, token){\n  // token is a string\n});\n```\n\n# Badges\n\n### listBadges \n\nList of all the existing badges\n\n```javascript\ncodebits.badges.listBadges(function (err, reply){\n  /*  each reply array elem: \n  {  \n    \"id\": \"string\",           //badge id\n    \"img\": \"string\",          //img url\n    \"title\": \"string\",        //badge title\n    \"description\": \"string\",  //badge description \n    \"usercount\": \"string\"     //number of users who have this badge\n  }\n  */  \n});\n```\n\n### getBadgeUsers\n\nList of all the users who have a certain badge\n\n```javascript\ncodebits.badges.getBadgeUsers('BADGE_ID', function(err, reply){\n  /* reply is an array, where each element\n  {\n    \"uid\": \"string\", //user id\n    \"name\": \"string\", //user name\n    \"nick\": \"string\", //user nick\n    \"proofurl\": \"string\",\n    \"md5mail\": \"string\"\n  } \n  */\n});\n```\n\n### redeemBadges \n\n**[Requires authentication!]**\n\nRedeem a badge through a badge code \n\n```javascript\ncodebits.badges.redeemBadges('BADGE_CODE', function (err, reply){\n  // if successful reply will be an object with success code and msg\n  // if not, error code and reason \n});\n```\n\n# Bots\n\n### getBodyParts\n\nReturns the body parts you can play with to build your bot. \n\n```javascript\ncodebits.bots.getBodyParts( function (err, reply){\n  /*  body elem contains array for body parts\n  { \n    \"body\":\n      [{\n        \"id\": \"01\",\n        \"picker\": \"\\/builder\\/avatar_images\\/body\\/picker\\/t-body-01.png\",\n        \"file\": \"\\/builder\\/avatar_images\\/body\\/composer\\/body-01.png\"\n      },\n      { .... }, ....\n      ]\n  }\n  */\n});\n\n```\n\n### getUserBot\n\nReturns the bot structure for a certain user \n\n```javascript\ncodebits.bots.getUserBot('USER_ID', function (err, reply){\n  /* example reply object: \n  {\n    \"bgcolor\":0,\n    \"grad\":0,\n    \"body\":\"04\",\n    \"eyes\":\"07\",\n    \"mouth\":\"05\",\n    \"legs\":\"06\",\n    \"head\":\"01\",\n    \"arms\":\"17\",\n    \"balloon\":false,\n    \"botfile\":\"\\/bots\\/39f0e732e0d976c486573f53c687cc9d\",\n    \"comments_token\":\"2a680f5a39bf2e59b60e123cb22fb29611317522\"\n  }\n  */\n});\n```\n\n### makeBot\n\nReturns the bot image. \nRequest format as follows (example): \n```javascript\nvar opts = {\n  body: '01',\n  bgcolor: null,\n  grad: '03',\n  eyes: '04',\n  mouth: '05',\n  legs: '06',\n  head: '07',\n  arms: '08',\n  balloon: 'hello world! :-)',\n  file: '/path/to/save/returned/image.png'\n}\n```\n\nEach field has the exact ID (with leading zeros) from [getBodyParts](https://github.com/diasdavid/codebits#getBodyParts). \n\nIf you don't want a certain body part to be rendered, use `null` for the ID. The balloon is optional.\nIf `file:` field is null it defaults to `/tmp/bot.png`.\n\n```javascript\ncodebits.bots.makeBot(opts, function (err, res, body){\n  //the img will be saved to the path, res and body are in original form\n});\n```\n\n### setBot \n\n**[requires authentication!]**\n\nSets the bot of the authenticated user.\nFormat for `opts` field is the same as [makeBot](https://github.com/diasdavid/codebits#makeBot) minus the `file` field.\nReturns a success/unsuccess message. \n\n```javascript\n//_token is optional\ncodebits.bots.setBot(opts, _token, function (err, reply){\n  /* reply success example: \n    { result: 1, user: '3949', msg: 'bot set' } //success\n  */\n});\n```\n\n# Calendar\n\nReturns this year's codebits calendar with detailed information. \n\n```javascript\ncodebits.calendar.getCalendar( function (err, result){\n  /*  \n      Calendar is an array\n      check the full object at: https://services.sapo.pt/Codebits/calendar\n  */\n});\n```\n\n# Call for Talks\n\n### listSubmissions \n\n**[authentication optional!]**\n\nReturns the list of the call for talks submissions for this year.\nAuthentication is optional, returns the user thumb option under 'rated', if provided.\n\n```javascript\ncodebits.callfortalks.listSubmissions( function (err, reply){\n  /*  an array where each object is a talk:\n    {\n      id: \"string\",\n      title: \"string\",\n      description: \"string\",\n      regdate: \"2013-10-25 13:57:08\",\n      up: 'string\", //n votes up\n      down: \"string\", //n votes down\n      lang: \"en\",\n      user: \"string\",\n      userid: \"string\",\n      rated: \"string\",\n      approved: 1, //if approved\n      comments_token: \"string\" //useful to submit comments\n    }\n  */\n});\n```\n\n### voteTalkUp \n\n**[authentication required!]**\n\nVote up a proposed talk by its id.\n\n```javascript\n//_token is optional\ncodebits.callfortalks.voteTalkUp('TALK_ID', _token, function (err, reply){\n  /*  \n      Confirmation object returns the same talk id\n      { talk: '100', thumbs: 'up' }\n  */\n});\n```\n### voteTalkDown \n\n**[authentication required!]**\n\nVote down a proposed talk by its id.\n\n```javascript\n//_token is optional\ncodebits.callfortalks.voteTalkDown('TALK_ID', _token, function (err, reply){\n  /*  \n      Confirmation object returns the same talk id\n      { talk: '100', thumbs: 'down' }\n  */\n});\n```\n\n# Comments\n\n**[requires authentication!]**\n\nPosts a new comment on a certain thread identified by the comment_token. \nSome calls (ie: [listSubmission](https://github.com/diasdavid/codebits#listSubmissions)) will provide you with a comments_token field you can use here. \n\n```javascript\nvar opts = {\n  comment_token: '1234asdf1234qwerty',\n  comment: 'Hello Codebits World!',\n  subect: 'My Hello Message' //optional\n  token: authtoken //optional, If not submitted our code will search for it ˆ_ˆ\n};\n\ncodebits.comment.postComment(opts, function (err, reply){\n  /*  \n    { result: 1, msg: 'comment posted' }\n  */\n});\n```\n\n# Projects\n\n### listProjects \n\n**[requires authentication!]**\n\nReturns the list of submitted projects for this year's competition. \n\n```javascript\n//_token is optional\ncodebits.projects.listProjects(_token, function (err, reply){\n  /*  \n      returns an array where each object is a project\n  */\n});\n```\n\n### getProjectInfo \n\n**[requires authentication!}**\n\nReturns information about a specfic project.\n\n```javascript\n//_token is optional\ncodebits.ptojects.getProjectInfo('PROJECT_ID', _token, function (err, reply){\n  /*  \n      reply contains object with project info\n  */\n});\n```\n\n### getCurrentVotes\n\nReturns information about the number of votes for the project being voted at the project's presentation session \n\n```javascript\ncodebits.projects.getCurrentVotes( function (err, reply){\n  /*  //example reply obj\n    { project: '353', yes: 63, no: 56 } \n  */\n});\n```\n\n### voteCurrentProject \n\n**[requires authentication!]**\n\nVotes for the current project being presented. 1 for yes (liked it), 0 for no. \n\n```javascript\n//_token is optional\ncodebits.projects.voteCurrentProject('1', _token, function (err, reply){\n  /*  //confirmation reply object\n    { result: 1, project: '353' }\n  */\n});\n```\n\n# Search\n\n**[Requires authentication]**\n\nSearch this year's edition registered users database\n\n```javascript\n//_token is optional\ncodebits.search.searchByName('nick', _token, function (err, reply){\n  /*  //example reply for nick=celso\n  [ { id: '1119',\n    nick: 'Zed_Blade',\n    name: 'Celso Bem dos Santos',\n    md5mail: '44c4eb5469934ceebfffe940d72f9521' },\n  { id: '1',\n    nick: 'celso',\n    name: 'Celso Martinho',\n    md5mail: '39f0e732e0d976c486573f53c687cc9d' } ]\n  */\n});\n```\n\n# Users\n\n### getUserByID\n\n**[requires authentication!]**\n\nReturns basic user information.\n\n```javascript\n//_token is optional\ncodebits.users.getUserbyID('ID', _token, function (err, reply){\n  /* \n  { id: 'string',\n    nick: 'string',\n    avatar: 'string',\n    twitter: 'string',\n    name: 'string',\n    md5mail: '39f0e732e0d976c486573f53c687cc9d',\n    checkin_date: 0,\n    karma: '143',\n    bio: 'the users bio',\n    blog: 'string'\n    coderep: 'string'\n    status: 'accepted',\n    badges:\n    [ '38',\n     '10' ],\n  skills:\n   [ 'api',\n     'design',\n     'web' ] } \n  */  \n});\n```\n\n### getUserbyNick\n\n**[requires authentication!]**\n\nSame as above, uses nick instead of ID. \n\n```javascript\n//_token is optional\ncodebits.users.getUserbyNick('NICK', _token, function (err, reply){\n  /*  \n    Same as above!\n  */  \n});\n```\n\n### getUserFriends\n\n**[requires authentication!]**\n\nReturns the list of the user's friends. A word about the status: accepted is accepted by both friends, requested is awaiting acceptance on your side, pending is pending acceptance on your friend's side.\n\n```javascript\n//_token is optional\ncodebits.users.getUserFriends('ID', _token, function (err, reply){\n  /*  \n    An array of the same objects returned by getUserbyID/Nick\n  */  \n});\n```\n\n### addUserAsFriend\n\n**[requires authentication!]**\n\nAdds or confirms a user as your friend. Requires confirmation at the other end.\n\n```javascript\n//_token is optional\ncodebits.users.addUserAsFriend('ID', _token, function (err, reply){\n  /*  \n    \n  */  \n});\n```\n\n### rejectUserAsFriend\n\n**[requires authentication!]**\n\nRejects a user as your friend. Deletes the pending request at the other end, if it exists. \n\n```javascript\n//_token is optional\ncodebits.users.rejectUserAsFriend('ID', _token, function (err, reply){\n  /*  \n  */  \n});\n```\n\n### listAcceptedUsers\n\n**[requires authentication!]**\n\nReturns the list of accepted users for this year's Codebits. You can filter the list by an optional 'skill'. The list of skills is: php perl ruby python erlang cc cocoa dotnet java javascript css api web embbeded mobile hardware microformats security sysadmin network desktop scala clojure design dbdesign nosql cooking processing max \n\n```javascript\n//_token is optional\ncodebits.users.listAcceptedUsers('SKILL', _token, function (err, reply){\n  /*  \n  */  \n});\n```\n\n### userFavSessions\n\n**[requires authentication!]**\n\nReturns the list of favorite calendar sessions for a user.\n\n```javascript\n//_token is optional\ncodebits.users.userFavSessions('ID', _token, function (err, reply){\n  /*  \n  */\n});\n```\n\n# Other notes:\n\nThe correct API endpoint for user info by nick is not `/user`, it is `/nick` instead \n\n![](https://i.cloudup.com/5dsQCrS675-1200x1200.png)\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/diasdavid/codebits/issues"
  },
  "_id": "codebits@0.2.1",
  "_from": "codebits@"
}
